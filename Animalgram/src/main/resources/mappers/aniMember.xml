<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">
<!-- mno,idmail,mpass,nickname,mname,birth,mgender,job,mtel,maddr,favorite,pwcode,pwcodeas,mdate -->

	<!-- 회원가입 -->
	<insert id="insert">
		insert into amember (mno,idmail,mpass,nickname,mname,birth,mgender,mtel,maddr,favorite,pwcode,pwcodeas)
		 values(amember_seq.nextval,#{idmail},#{mpass},#{nickname},#{mname},#{birth},#{mgender},
		 #{mtel},#{maddr},#{favorite},#{pwcode},#{pwcodeas})
	</insert>
	
	<!-- 아이디 중복확인-->
	<select id="idcheck" resultType="String">
		select idmail
		from amember
		where idmail = #{idmail}
	</select>
	
	<!-- 닉네임 중복확인 -->
	<select id="nickcheck" resultType="String">
		select nickname
		from amember
		where nickname = #{nickname}
	</select>

	<!-- 아이디 찾기 -->
	<select id="findId" resultType="String">
		select idmail
		from amember
		where mname = #{mname} and birth = #{birth} and mtel = #{mtel}
	</select>
	
	<!-- 로그인 확인-->
	<select id="login" resultType="int">
		select count(*)
		from amember
		where idmail = #{idmail} and mpass=#{mpass}
	</select>
	
	<!-- 로그인 세션 (닉네임)가져오기 -->
	<select id="loginsession" resultType="String">
		select nickname
		from amember
		where idmail = #{idmail}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="selectpass" resultType="int">
		select count(*)
		from amember
		where pwcode = #{pwcode} and pwcodeas = #{pwcodeas} and idmail = #{idmail}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="updatepass">
		update amember
		set mpass = #{mpass}
		where idmail = #{idmail}
	</update>
	
	<!-- 회원정보 불러오기 -->
	<select id="memberinfo" resultType="member">
		select mno,idmail,mpass,nickname,mname,birth,mgender,job,mtel,maddr,favorite,pwcode,pwcodeas,to_char(mdate,'yy/mm/dd') mdate 
		from amember 
		where nickname = #{nickname}
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="mupdate">
		update amember 
		set mpass=#{mpass}, maddr=#{maddr}, mtel=#{mtel}, favorite=#{favorite} 
		where idmail = #{idmail}
	</update>
	
	<!-- 펫 등록하기 -->
	<insert id="petinsert">
		insert into animal (ano,mno,aname,agender,aage,atype,aimage) 
		values (animal_seq.nextval,(select mno from amember where nickname = #{nickname}),
					#{aname},#{agender},#{aage},#{atype},#{aimage})
	</insert>
	
	<!-- 펫 정보 불러오기 -->
	<select id="petselect" resultType="animal">
		select ano,nickname,aname,agender,aage,atype,aimage,adate
		from animal natural join amember
		where mno = (select mno from amember where nickname = #{nickname})
	</select>
	
	<!-- 전문가 등록하기 -->
	<insert id="proinsert">
		insert into professional (pno,mno,ptype,ptypeno,pcareer,pimage)
		 values (professional_seq.nextval,(select mno from amember where nickname=#{nickname}),
		 	#{ptype},#{ptypeno},#{pcareer},#{pimage})
	</insert>
	
	<!-- 전문가 등록_job 업데이트 -->
	<update id="proinsert_up">
		update amember
		set job = #{job}
		where nickname = #{nickname}
	</update>
	
	<!-- 판매자 등록하기 -->
	<insert id="sellinsert">
		insert into seller (sno,mno,sname,stel,saddr) 
		values (seller_seq.nextval,(select mno from amember where nickname=#{nickname}),
							#{sname},#{stel},#{saddr})
	</insert>
	
	<!-- 전문가 조회 -->
	<select id="selectPro" resultType="String">
		select job
		from amember
		where nickname=#{nickname}
	</select>
	
	<!-- 판매자 조회 -->
	
</mapper>
